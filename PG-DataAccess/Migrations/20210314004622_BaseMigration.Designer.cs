// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PG_DataAccess.Data;

namespace PG_DataAccess.Migrations
{
    [DbContext(typeof(PgDbContext))]
    [Migration("20210314004622_BaseMigration")]
    partial class BaseMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PG_DataAccess.Models.PaymentRequest", b =>
                {
                    b.Property<int>("paymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("cardHolder")
                        .IsRequired()
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("cardNumberMasked")
                        .IsRequired()
                        .HasColumnType("varchar(8000)");

                    b.Property<string>("currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("dateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("expiryDate")
                        .IsRequired()
                        .HasColumnType("varchar(8000)");

                    b.Property<bool>("paymentSuccessful")
                        .HasColumnType("bit");

                    b.HasKey("paymentId");

                    b.ToTable("paymentRequests");

                    b.HasData(
                        new
                        {
                            paymentId = 1,
                            amount = 100.00m,
                            cardHolder = "t8BRVU02Fmrx4jxCjktAZ2g/CcI4pQu4m8+UIIVfrODe87/2xY2kDwRemVLWTvfD",
                            cardNumberMasked = "mlvUqlp9sKZ79HB73DL0bpWkefQ3qlTlsobhR7SER5wiA4x3JWZ3fN/M0rEQ2XUm",
                            currency = "GBP",
                            dateCreated = new DateTime(2021, 3, 14, 0, 46, 21, 785, DateTimeKind.Utc).AddTicks(8272),
                            expiryDate = "j/2UsMlOPjExgsV9ZVGQe289S+KSnP7uc6ECrk/vtQE=",
                            paymentSuccessful = true
                        },
                        new
                        {
                            paymentId = 2,
                            amount = 250.00m,
                            cardHolder = "dVFysYj8g+orcOJXkNox67wUofDxoG6eJI7DiLaLIdGLxutLehL/9BeFom7tsh+B",
                            cardNumberMasked = "YuAhD0n/eK8FzY8fkJGim3biItV35azxny/FOHUgtHs8l5dkW5T4WQgAE/NjvO0C",
                            currency = "GBP",
                            dateCreated = new DateTime(2021, 3, 14, 0, 46, 21, 787, DateTimeKind.Utc).AddTicks(2912),
                            expiryDate = "RPSDgJBOfQXet/indJFR2o1R0qVxAz4bCioRnUiEeeI=",
                            paymentSuccessful = true
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
